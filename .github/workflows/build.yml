name: Build

on:
  workflow_run:
    workflows: [Update]
    types:
      - completed

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        msystem: ["MINGW64", "UCRT64"]
    env:
      MSYSTEM: ${{ matrix.msystem }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Check if today's tag exists
        id: tag
        run: |
          today="$(date +%Y%m%d)"
          tag="$(cat tag.txt)"
          if [ "$tag" = "$today" ]; then
          	echo "skip=false" >> "$GITHUB_OUTPUT"
          	echo "tag=$today" >> "$GITHUB_OUTPUT"
          else
          	echo "skip=true" >> "$GITHUB_OUTPUT"
          fi
        shell: 'C:/shells/msys2bash.cmd {0}'

      - name: Install dependencies
        if: ${{ steps.tag.outputs.skip == 'false' }}
        run: |
          if [ "$MSYSTEM" = "MINGW64" ]; then
          	pacman -S --noconfirm --needed --noprogressbar make mingw-w64-x86_64-gcc
          else
          	pacman -S --noconfirm --needed --noprogressbar make mingw-w64-ucrt-x86_64-gcc
          fi
        shell: 'C:/shells/msys2bash.cmd {0}'

      - name: Build tree-sitter modules
        if: ${{ steps.tag.outputs.skip == 'false' }}
        id: build
        run: |
          if [ "$MSYSTEM" = "MINGW64" ]; then
          	export PATH="/mingw64/bin:/C/Program Files/Git/bin:$PATH"
          else
          	export PATH="/ucrt64/bin:/C/Program Files/Git/bin:$PATH"
          fi
          cc -v

          mkdir -p dist/licenses

          git submodule foreach bash ../build.sh . "$MSYSTEM"
          cp language-manifest.txt dist/

          echo "summary<<EOF" >> "$GITHUB_OUTPUT"
          cat dist/language-manifest.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

          ls -l dist
        shell: 'C:/shells/msys2bash.cmd {0}'

      - name: Archive
        if: ${{ steps.tag.outputs.skip == 'false' }}
        id: archive
        run: |
          if ($env:MSYSTEM -eq "MINGW64") {
              $ARCHIVE = "emacs-tree-sitter-module-${{ steps.tag.outputs.tag }}.zip"
          } else {
              $ARCHIVE = "emacs-tree-sitter-module-ucrt64-${{ steps.tag.outputs.tag }}.zip"
          }

          cd dist
          Compress-Archive -Path *.dll,language-manifest.txt,licenses -DestinationPath "../$ARCHIVE"
          cd ..
          $ARTIFACT_HASH = (Get-FileHash -Algorithm SHA256 "$ARCHIVE").Hash
          "$ARTIFACT_HASH" | Out-File -Encoding ascii -File "$ARCHIVE.sha256"

          gc $env:GITHUB_OUTPUT

      - name: Upload packages
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ matrix.msystem }}
          path: |
            emacs-tree-sitter-module-*.zip

  release:
    runs-on: ubuntu-latest

    needs: [build]

    steps:
      - name: Download packages
        uses: actions/download-artifact@v4
        with:
          pattern: package-*
          merge-multiple: true

      - name: Display structure of downloaded files
        run: ls -R

      - name: Create Release
        if: ${{ steps.tag.outputs.skip == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          commit: '${{ github.sha }}'
          tag: '${{ steps.tag.outputs.tag }}'
          artifacts: "emacs-tree-sitter-module-*.zip,emacs-tree-sitter-module-*.zip.sha256"
          artifactContentType: application/octet-stream
          name: tree-sitter module DLLs ${{ steps.tag.outputs.tag }}
          body: |
            tree-sitter module DLLs.

            ```
            ${{ steps.build.outputs.summary }}
            ```
